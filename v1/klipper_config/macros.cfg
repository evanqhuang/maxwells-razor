[gcode_macro SET_SAFE_EXTRUDE_TEMP]
description: SET_SAFE_EXTRUDE_TEMP TEMP=<temp>
gcode:
    SAVE_VARIABLE VARIABLE=safe_extrude_temp VALUE={params.TEMP}

[gcode_macro filament_unload]
gcode:
 M83
 G1 E-650 F2500

[gcode_macro filament_load]
gcode:
 M83
 G1 E580 F2500
 G1 E50 F500

[gcode_macro RETRACT_EXTRUDER]
gcode:
   G92 E0
   G1 E-1 F2400
   G92 E0

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

[gcode_macro MOVE_TO_MAX]
description: Moves the toolhead to the maximum X, Y, and Z coordinates.
gcode:
    {% if 'x' not in printer.toolhead.homed_axes or 'y' not in printer.toolhead.homed_axes %}
        {action_raise_error("Printer must be fully homed (X, Y, and Z) before moving to max.")}
    {% else %}
        ; Get the maximum positions from the printer's toolhead limits
        {% set max_x = printer.toolhead.axis_maximum.x %}
        {% set max_y = printer.toolhead.axis_maximum.y %}

        ; Send a message to the console
        {action_respond_info("Moving to MAX position: X=" ~ max_x ~ " Y=" ~ max_y)}

        ; Set to absolute positioning
        G90

        ; Perform a rapid move to the maximum coordinates
        ; Note: We subtract a small amount (0.2mm) from each axis as a safety margin
        ; to avoid grinding against the physical limits. Adjust if needed.
        G0 X{max_x - 5} Y{max_y - 5} F6000
    {% endif %}
   
[gcode_macro SHIMMY_NOZZLE]
description: Shakes the nozzle from front-to-back at the right edge of the bed to clear excess filament.
gcode:
    ; --- Define default parameters for the shimmy action ---
    {% set shakes = params.SHAKES|default(5)|int %}
    {% set distance = params.DISTANCE|default(10)|float %}
    {% set speed = params.SPEED|default(10000)|int %}

    ; --- Safety Check: Ensure all axes are homed before proceeding ---
    {% if 'x' not in printer.toolhead.homed_axes or 'y' not in printer.toolhead.homed_axes %}
        {action_raise_error("Printer must be fully homed before running SHIMMY_NOZZLE.")}
    {% else %}
        ; --- Get the necessary bed dimensions for positioning ---
        {% set max_x = printer.toolhead.axis_maximum.x %}
        {% set y_center = printer.toolhead.axis_maximum.y / 2 %}

        {action_respond_info("Preparing to shimmy nozzle...")}

        ; --- Move to the starting position at the right-center of the bed ---
        G90 ; Use absolute positioning
        ; Move to the right edge (with a 5mm safety margin) and center the shake on Y
        G1 X{max_x - 5} Y{y_center - (distance / 2)} F9000

        {action_respond_info("Shaking nozzle " ~ shakes ~ " times over " ~ distance ~ "mm...")}

        ; --- Perform the shimmy motion (front-to-back on Y-axis) ---
        G91 ; Use relative positioning for the shakes

        {% for i in range(shakes) %}
            G1 Y{distance} F{speed}
            G1 Y-{(distance)} F{speed}
        {% endfor %}

        ; --- Return to absolute positioning ---
        G90

        {action_respond_info("Shimmy complete.")}
    {% endif %}

[gcode_macro PRIME_NOZZLE]
description: Primes the nozzle by building a prime tower at the right edge of the bed.
gcode:
    ; --- Define default parameters for the prime tower layer ---
    {% set extrude_length = params.EXTRUDE_LENGTH|default(20)|float %}
    {% set layer_height = params.LAYER_HEIGHT|default(0.2)|float %}
    {% set prime_speed = params.PRIME_SPEED|default(3)|float * 60 %} ; Speed in mm/min
    {% set travel_speed = params.TRAVEL_SPEED|default(9000)|int %}
    {% set min_temp = params.MIN_TEMP|default(220)|int %}

    ; --- Safety Check: Ensure the [save_variables] module is enabled ---
    {% if 'save_variables' not in printer %}
        {action_raise_error("The [save_variables] module is not enabled in printer.cfg, which is required for the prime tower.")}
    {% endif %}

    ; --- Safety Check: Ensure the extruder is hot enough before proceeding ---
    {% if printer.extruder.temperature < min_temp %}
        {action_raise_error("Extruder temperature is below the minimum priming temp of " ~ min_temp ~ "C.")}
    {% endif %}

    ; --- Access saved variables to get current tower height ---
    {% set svv = printer.save_variables.variables %}
    {% set current_z = svv.prime_tower_z|default(0.2)|float %}

    ; --- Get necessary bed dimensions for positioning ---
    {% set max_x = printer.toolhead.axis_maximum.x %}
    {% set y_pos = printer.toolhead.axis_maximum.y - 5 %} ; Position 5mm from the back edge

    {action_respond_info("Priming nozzle at tower Z height: " ~ current_z)}

    ; --- Positioning for the prime tower layer ---
    G90 ; Use absolute positioning
    G1 Z{current_z} F3000 ; Move to the current tower height
    ; Move to the start point of the prime line on the right edge
    G1 X{max_x - 10} Y{y_pos} F{travel_speed}

    ; --- Prime Line Extrusion ---
    M83 ; Switch to relative extrusion
    ; Extrude the filament while moving forward along the X-axis to create a small line
    G1 X{max_x - 5} E{extrude_length} F{prime_speed}

    ; --- Retract slightly to prevent ooze ---
    G1 E-0.5 F2100 ; Perform a small retraction

    M82 ; Switch back to absolute extrusion

    ; --- Update and save the Z height for the next layer ---
    {% set next_z = current_z + layer_height %}
    SAVE_VARIABLE VARIABLE=prime_tower_z VALUE={next_z}

# --------------------------------------------------------------------
# Companion macro to reset the tower height.
# Run this in your START_PRINT macro or at the beginning of a print.
# --------------------------------------------------------------------
[gcode_macro RESET_PRIME_TOWER]
description: Resets the Z height of the prime tower to its base layer.
gcode:
    SAVE_VARIABLE VARIABLE=prime_tower_z VALUE=0.2
    {action_respond_info("Prime tower height has been reset.")}

